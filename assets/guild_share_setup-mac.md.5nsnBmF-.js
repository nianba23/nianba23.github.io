import{_ as e,o as a,c as s,R as l}from"./chunks/framework.oNtUbm1h.js";const b=JSON.parse('{"title":"Mac OS 装机指南","description":"","frontmatter":{},"headers":[],"relativePath":"guild/share/setup-mac.md","filePath":"guild/share/setup-mac.md"}'),i={name:"guild/share/setup-mac.md"},n=l(`<h1 id="mac-os-装机指南" tabindex="-1">Mac OS 装机指南 <a class="header-anchor" href="#mac-os-装机指南" aria-label="Permalink to &quot;Mac OS 装机指南&quot;">​</a></h1><p>之前一直使用的 windows，现在换到 mac，所以简单记录一下安装配置的过程，以便在更换电脑的时候，轻车熟路的进行配置。</p><h2 id="软件安装" tabindex="-1">软件安装 <a class="header-anchor" href="#软件安装" aria-label="Permalink to &quot;软件安装&quot;">​</a></h2><p>原生 APP 有的还是非常好用的：</p><ul><li>输入法</li><li>备忘录</li><li>邮件</li><li>日历</li><li>地图</li><li>音乐</li><li>截屏</li><li>提醒事项</li><li>无边际</li><li>Safari</li><li>Pages 文稿</li><li>Keynote 讲演</li><li>Numbers 表格</li></ul><p>mac 的文件系统和 windows 不同，没有盘符的区分，在安装软件的时候，可以直接在 App Store 中搜索安装，也可以下载镜像文件，然后将镜像文件拖到应用程序中进行安装（在安装一些镜像文件时有权限问题，可以到‘系统设置-隐私与安全性’中同意安装）。 要存放的文件，可以直接在访达中进行拖拽，也可以通过命令行进行操作。由于没有盘符的概念，所以文件可以在个人用户目录下创建相应分类的目录进行存放。</p><h3 id="第三方软件" tabindex="-1">第三方软件 <a class="header-anchor" href="#第三方软件" aria-label="Permalink to &quot;第三方软件&quot;">​</a></h3><ul><li><p>iHost 管理本地 host 的免费软件，可以轻松的对 host 文件进行编辑和分类，自由的切换分组。<a href="https://github.com/toolinbox/iHosts" target="_blank" rel="noreferrer">Github</a></p></li><li><p>视频播放器 开源播放器<a href="https://iina.io" target="_blank" rel="noreferrer">iiNA</a>，只专注于视频播放，没有其他附属功能。</p></li><li><p>SCROLL REVERSER（鼠标反转） 如果你不是使用妙控鼠标，而是第三方鼠标（罗技的话 options+ 也可以），那么滚轮的方向和触摸板的方向是不一致的，可以使用这款<a href="https://pilotmoon.com/scrollreverser/?_blank" target="_blank" rel="noreferrer">软件</a>颠倒一下鼠标滚轮方向。</p></li><li><p>BetterDisplay 一款专为 Mac 平台设计的专业级屏幕自定义调整工具，可自定义分辨率、XDR/HDR 额外亮度、虚拟屏幕、画中画、显示断开连接、显示和 EDID 覆盖等</p></li><li><p>腾讯柠檬清理 要在官网下载完整版本，不要在 store 下载</p></li><li><p>ice 一款的菜单栏管理工具,主要功能是隐藏和显示菜单栏项目</p></li><li><p>UPDF</p></li><li><p>DeepL</p></li><li><p>Snipaste</p></li><li><p>Notion</p></li><li><p>DBeaver</p></li><li><p>Apifox</p></li><li><p>Sourecetree</p></li></ul><h2 id="系统设置" tabindex="-1">系统设置 <a class="header-anchor" href="#系统设置" aria-label="Permalink to &quot;系统设置&quot;">​</a></h2><p>如果是苹果全家桶，强大的 iCloud 同步能力，在配置新电脑的时候只要登陆 Apple ID，所有数据都会同步过来（照片、备忘录、提醒、文档等等）。只需做一些简单设置，就可以进行日常使用。但如果是公司电脑建议不要开启同步。</p><h2 id="开发环境" tabindex="-1">开发环境 <a class="header-anchor" href="#开发环境" aria-label="Permalink to &quot;开发环境&quot;">​</a></h2><ul><li><a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git</a> （配置 GitHub）</li><li><a href="https://brew.sh/zh-cn/" target="_blank" rel="noreferrer">HomeBrew</a> （安装开发软件很实用 如 brew install nginx）<a href="https://gitee.com/cunkai/HomebrewCN" target="_blank" rel="noreferrer">墙内安装脚本</a></li><li><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a> 用于管理 node</li><li><a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">node</a> 推荐直接使用 nvm 安装。</li><li><a href="https://www.google.cn/chrome/index.html" target="_blank" rel="noreferrer">chrome</a> 登陆谷歌账号可以同步所有书签和账号密码</li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">vscode</a> 登陆 github 账号可以同步所有偏好设置和插件</li><li><a href="https://ohmyz.sh/" target="_blank" rel="noreferrer">oh-my-zsh</a> (提供非常多的快捷命令：如 gst = git status) （没有 🪜 很难安装）</li><li>🪜 很多软件都是使用国外的，所以几乎是必须准备一个 🪜。mac 上推荐使用 <a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noreferrer">ShadowsocksX</a>、<a href="https://github.com/yichengchen/clashX" target="_blank" rel="noreferrer">clashX</a></li></ul><ol><li><p>终端确认是<code>zsh</code>还是<code>bash</code>用户，输入命令<code>echo $SHELL</code>查看输出是‘bin/zsh’还是‘bin/bash’</p></li><li><p>安装 HomeBrew</p><p>Mac 基本安装了内置的 Git，如果没安装则手动安装下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 需要梯子</span></span>
<span class="line"><span>/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/main/install.sh)&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 国内镜像</span></span>
<span class="line"><span>/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span></span></code></pre></div><p>安装成功后，重新加载下配置文件<code>source /Users/xxx/.zprofile</code></p></li><li><p>安装 nvm <code>brew install nvm</code></p></li><li><p>加载 nvm 到 shell</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 打开shell配置文件</span></span>
<span class="line"><span>cd ~</span></span>
<span class="line"><span>vim ~/zshrc</span></span>
<span class="line"><span>// 如果是 bash 的话，执行 vim .bash_profile</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 编辑文件，:wq 退出编辑</span></span>
<span class="line"><span>export NVM_DIR=~/.nvm</span></span>
<span class="line"><span>source $(brew --prefix nvm)/nvm.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 重新加载配置文件</span></span>
<span class="line"><span>source ~/.zshrc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 确认nvm安装成功</span></span>
<span class="line"><span>nvm -v</span></span></code></pre></div></li><li><p>安装 node</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nvm ls-remote</span></span>
<span class="line"><span>nvm install xxx</span></span>
<span class="line"><span>nvm use xxx</span></span></code></pre></div><p>最后确认所有环境是否安装成功，<code>git -v</code> <code>nvm -v</code> <code>node -v</code> <code>npm -v</code></p></li></ol><h2 id="vscode-插件" tabindex="-1">vscode 插件 <a class="header-anchor" href="#vscode-插件" aria-label="Permalink to &quot;vscode 插件&quot;">​</a></h2><ul><li>Auto Close Tag</li><li>Auto Import</li><li>Auto Rename Tag</li><li>Chinese Language Pack for Visual Studio Code</li><li>Code Runner</li><li>Code Spell Checker</li><li>Color Info</li><li>CSS Peek</li><li>ESLint</li><li>Git History</li><li>GitLens</li><li>GitHub Copilot</li><li>HTML CSS Support</li><li>Import Cost</li><li>ES6 code snippets</li><li>Less watch</li><li>Local History</li><li>JSON</li><li>JSON to TS</li><li>open in browser</li><li>Partial Diff</li><li>Path Intellisense</li><li>Project Manager</li><li>Stylelint</li><li>Volar</li><li>vscode-icons</li><li>Vue VSCode Snippets</li><li>VueHelper</li></ul><h4 id="配置-ssh-密钥" tabindex="-1">配置 ssh 密钥 <a class="header-anchor" href="#配置-ssh-密钥" aria-label="Permalink to &quot;配置 ssh 密钥&quot;">​</a></h4><ol><li>查看是否有 ssh 文件 输入命令<code>$cd ~/.ssh</code>，或访达查看隐藏文件</li><li>生成私钥和公钥，输入<code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> 会在.ssh 目录下生成 id_rsa、id_rsa.pub 文件，输入时默认回车即可</li><li>查看获取到的公钥，输入<code>cat ~/.ssh/id_rsa.pub</code></li><li>复制这个公钥地址，添加到 github、gitlab, gitee 的 ssh 配置里面</li><li>配置 ssh 连接 <code>ssh -T git@github.com</code> <code>ssh -T git@gitlab.com</code></li><li>验证一下 ssh 是否连接成功，输入<code>ssh git@github.com、git@gitee.com、git@gitlab.com</code></li></ol>`,17),t=[n];function o(p,r,c,h,d,u){return a(),s("div",null,t)}const g=e(i,[["render",o]]);export{b as __pageData,g as default};
