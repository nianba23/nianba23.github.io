import{_ as c,D as r,o as a,c as o,b as n,w as s,a4 as e,R as t,k as d,I as l,a as p}from"./chunks/framework.oNtUbm1h.js";const T=JSON.parse('{"title":"Mermaid 教程","description":"","frontmatter":{},"headers":[],"relativePath":"guild/mermaid.md","filePath":"guild/mermaid.md"}'),h={name:"guild/mermaid.md"},A=t(`<h1 id="mermaid-教程" tabindex="-1">Mermaid 教程 <a class="header-anchor" href="#mermaid-教程" aria-label="Permalink to &quot;Mermaid 教程&quot;">​</a></h1><h2 id="什么是-mermaid" tabindex="-1">什么是 Mermaid <a class="header-anchor" href="#什么是-mermaid" aria-label="Permalink to &quot;什么是 Mermaid&quot;">​</a></h2><p>Mermaid 是一款文本驱动图表的工具，可以用简单的文本来描述来创建各种类型的图表，例如流程图、序列图、甘特图、饼图等。 Mermaid 可以作为一个 JavaScript 库使用，也可以作为一个命令行工具使用。 使用 Mermaid，可以轻松地在文本编辑器中编写图表定义，而无需使用专业的图表工具或图形用户界面。</p><h2 id="如何使用-mermaid" tabindex="-1">如何使用 Mermaid <a class="header-anchor" href="#如何使用-mermaid" aria-label="Permalink to &quot;如何使用 Mermaid&quot;">​</a></h2><ul><li>在 HTML 或 Markdown 文件中引用 Mermaid 库和 Mermaid CSS 样式表。</li><li>使用 Mermaid 的 CLI 工具在命令行中生成图表，或使用 Mermaid 的 API 在自己的应用程序中生成图表</li></ul><p>以下是一些简单的 Mermaid 实例：</p><ol><li>流程图</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>graph TD;</span></span>
<span class="line"><span>  A--&gt;B;</span></span>
<span class="line"><span>  A--&gt;C;</span></span>
<span class="line"><span>  B--&gt;D;</span></span>
<span class="line"><span>  C--&gt;D;</span></span></code></pre></div>`,8),g=d("ol",{start:"2"},[d("li",null,"思维导图")],-1),k=t(`<ol start="3"><li>序列图</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sequenceDiagram</span></span>
<span class="line"><span>  Alice-&gt;&gt;+John: 欢迎！</span></span>
<span class="line"><span>  Alice-&gt;&gt;+John: 你好吗？</span></span>
<span class="line"><span>  John--&gt;&gt;-Alice: 我很好，谢谢！</span></span>
<span class="line"><span>  John--&gt;&gt;-Alice: 有什么我可以帮助你的吗？</span></span></code></pre></div>`,2),m=t(`<ol start="4"><li>甘特图</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>gantt</span></span>
<span class="line"><span>  title 项目计划</span></span>
<span class="line"><span>  section 项目启动</span></span>
<span class="line"><span>    任务1           :a1, 2023-01-01, 30d</span></span>
<span class="line"><span>    任务2           :after a1  , 20d</span></span>
<span class="line"><span>  section 阶段2</span></span>
<span class="line"><span>    任务3           : 48d</span></span>
<span class="line"><span>    任务4           :after a1  , 12d</span></span></code></pre></div>`,2),E=t(`<ol start="5"><li>饼图</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pie</span></span>
<span class="line"><span>  title 饼图示例</span></span>
<span class="line"><span>  &quot;Slice 1&quot; : 30</span></span>
<span class="line"><span>  &quot;Slice 2&quot; : 25</span></span>
<span class="line"><span>  &quot;Slice 3&quot; : 20</span></span>
<span class="line"><span>  &quot;Slice 4&quot; : 15</span></span>
<span class="line"><span>  &quot;Slice 5&quot; : 10</span></span></code></pre></div>`,2),_=t(`<ol start="6"><li>类图</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>classDiagram</span></span>
<span class="line"><span>  class Animal {</span></span>
<span class="line"><span>    - age: int</span></span>
<span class="line"><span>    + eat(): void</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  class Dog {</span></span>
<span class="line"><span>    + bark(): void</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>  Animal &lt;|-- Dog</span></span></code></pre></div>`,2),u=t(`<p>注意：要在 vitepress 中集成 Mermaid 图表，需要安装<code>vitepress-plugin-mermaid</code>和<code>mermaid</code>插件，以及在 <code>.vitepress/config.js</code> 中进行配置。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress-plugin-mermaid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mermaid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .vitepress/config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { withMermaid } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vitepress-plugin-mermaid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> withMermaid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // your existing vitepress config...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // optionally, you can pass MermaidConfig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mermaid: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>更多内容，推荐阅读 <a href="https://mermaid.js.org/" target="_blank" rel="noreferrer">Mermaid 官方文档</a></p>`,4);function B(C,v,b,y,D,f){const i=r("Mermaid",!0);return a(),o("div",null,[A,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-35",class:"mermaid",graph:"graph%20TD%3B%0A%20%20A--%3EB%3B%0A%20%20A--%3EC%3B%0A%20%20B--%3ED%3B%0A%20%20C--%3ED%3B%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),g,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-43",class:"mermaid",graph:"mindmap%0ARoot%0A%20%20A%0A%20%20B%0A%20%20C%0A%20%20D%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),k,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-52",class:"mermaid",graph:"sequenceDiagram%0A%20%20Alice-%3E%3E%2BJohn%3A%20%E6%AC%A2%E8%BF%8E%EF%BC%81%0A%20%20Alice-%3E%3E%2BJohn%3A%20%E4%BD%A0%E5%A5%BD%E5%90%97%EF%BC%9F%0A%20%20John--%3E%3E-Alice%3A%20%E6%88%91%E5%BE%88%E5%A5%BD%EF%BC%8C%E8%B0%A2%E8%B0%A2%EF%BC%81%0A%20%20John--%3E%3E-Alice%3A%20%E6%9C%89%E4%BB%80%E4%B9%88%E6%88%91%E5%8F%AF%E4%BB%A5%E5%B8%AE%E5%8A%A9%E4%BD%A0%E7%9A%84%E5%90%97%EF%BC%9F%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),m,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-61",class:"mermaid",graph:"gantt%0A%20%20title%20%E9%A1%B9%E7%9B%AE%E8%AE%A1%E5%88%92%0A%20%20section%20%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%0A%20%20%20%20%E4%BB%BB%E5%8A%A11%20%20%20%20%20%20%20%20%20%20%20%3Aa1%2C%202023-01-01%2C%2030d%0A%20%20%20%20%E4%BB%BB%E5%8A%A12%20%20%20%20%20%20%20%20%20%20%20%3Aafter%20a1%20%20%2C%2020d%0A%20%20section%20%E9%98%B6%E6%AE%B52%0A%20%20%20%20%E4%BB%BB%E5%8A%A13%20%20%20%20%20%20%20%20%20%20%20%3A%2048d%0A%20%20%20%20%E4%BB%BB%E5%8A%A14%20%20%20%20%20%20%20%20%20%20%20%3Aafter%20a1%20%20%2C%2012d%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),E,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-70",class:"mermaid",graph:"pie%0A%20%20title%20%E9%A5%BC%E5%9B%BE%E7%A4%BA%E4%BE%8B%0A%20%20%22Slice%201%22%20%3A%2030%0A%20%20%22Slice%202%22%20%3A%2025%0A%20%20%22Slice%203%22%20%3A%2020%0A%20%20%22Slice%204%22%20%3A%2015%0A%20%20%22Slice%205%22%20%3A%2010%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),_,(a(),n(e,null,{default:s(()=>[l(i,{id:"mermaid-79",class:"mermaid",graph:"classDiagram%0A%20%20class%20Animal%20%7B%0A%20%20%20%20-%20age%3A%20int%0A%20%20%20%20%2B%20eat()%3A%20void%0A%20%20%7D%0A%20%20class%20Dog%20%7B%0A%20%20%20%20%2B%20bark()%3A%20void%0A%20%20%7D%0A%20%20Animal%20%3C%7C--%20Dog%0A"})]),fallback:s(()=>[p(" Loading... ")]),_:1})),u])}const S=c(h,[["render",B]]);export{T as __pageData,S as default};
